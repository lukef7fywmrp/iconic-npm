import { GetStaticProps } from "next";
import { groq } from "next-sanity";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import Header from "../components/Header";
import { sanityClient, urlFor } from "../sanity";

interface Props {
  library: Library;
}

function LibraryPage({ library }: Props) {
  return (
    <div className="flex min-h-screen flex-col bg-[#040009] font-author">
      <Head>
        <title>
          {library.title} | {library.creator.name}
        </title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header />
      <main>
        <img
          className="absolute top-0 h-[80vh] w-full"
          src="/gradientbg01.png"
          alt=""
        />
        <div className="group flex flex-col items-center justify-center space-y-3 py-10">
          <div className="relative">
            <div className="flex h-24 w-24 items-center rounded-3xl border border-white/10 bg-white/10 p-3 transition duration-500 group-hover:bg-white/20">
              <Image
                src={urlFor(library.logo).url()!}
                height="100%"
                width="100%"
                objectFit="contain"
              />
            </div>
          </div>
          {/* Title */}
          <h1 className="z-10 text-center text-2xl tracking-wide text-white/90  duration-500 group-hover:scale-105 group-hover:text-white/100">
            {library.title}
          </h1>
        </div>
      </main>
    </div>
  );
}

export default LibraryPage;

// Which pages exist
export const getStaticPaths = async () => {
  const query = groq`
        *[_type == "library"]{
             _id,
            slug {
    current
  }
}
    `;

  const libraries = await sanityClient.fetch(query);

  const paths = libraries.map((library: Library) => ({
    params: {
      slug: library.slug.current,
    },
  }));

  return {
    paths,
    fallback: "blocking",
  };
};

// Populate the data into the pages which exist and only prebuild them
export const getStaticProps: GetStaticProps<Props> = async ({ params }) => {
  const query = `*[_type == "library" && slug.current == $slug][0]{
 _id,
slug,
title,
description,
logo,
creator -> {
    name,
    slug,
    image
},
documentation
}`;

  const library = await sanityClient.fetch(query, {
    slug: params?.slug,
  });

  if (!library) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      library,
    },
    revalidate: 60, // after 60 seconds, it'll update the old cached version
  };
};
