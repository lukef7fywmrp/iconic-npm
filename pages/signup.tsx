import Head from "next/head";
import Image from "next/image";
import Header from "../components/Header";
import { FaGithub } from "react-icons/fa";
import { FcGoogle } from "react-icons/fc";
import { FiChevronRight } from "react-icons/fi";

import { useEffect, useState } from "react";
import Link from "next/link";
import {
  useAuthState,
  useCreateUserWithEmailAndPassword,
} from "react-firebase-hooks/auth";
import { auth } from "../firebase";
import { AiFillEye, AiFillEyeInvisible } from "react-icons/ai";
import { FIREBASE_ERRORS } from "../constants";
import { useRouter } from "next/router";

function Signup() {
  const [form, setForm] = useState({
    email: "",
    password: "",
    confirmPassword: "",
  });
  const [user] = useAuthState(auth);
  const router = useRouter();
  const [passwordType, setPasswordType] = useState("password");
  const [formError, setFormError] = useState("");
  const [createUserWithEmailAndPassword, _, loading, authError] =
    useCreateUserWithEmailAndPassword(auth);

  const togglePassword = () => {
    if (passwordType === "password") {
      setPasswordType("text");
      return;
    }
    setPasswordType("password");
  };

  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    if (formError) setFormError("");
    if (!form.email.includes("@")) {
      return setFormError("Please enter a valid email");
    }

    if (form.password !== form.confirmPassword) {
      return setFormError("Passwords do not match");
    }

    // Valid form inputs
    createUserWithEmailAndPassword(form.email, form.password);
  };

  const onChange = ({
    target: { name, value },
  }: React.ChangeEvent<HTMLInputElement>) => {
    setForm((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  useEffect(() => {
    if (user) router.push("/");
  }, [user]);

  return (
    <div className="flex min-h-screen flex-col bg-[#040009] font-author">
      <Head>
        <title>Signup | Iconic</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header />
      {/* Gradient Background */}
      <img className="absolute top-0 w-full" src="/gradientbg01.png" alt="" />
      <div className="bg-gradient-to-r from-black via-[#0a0a0a] p-[1px]"></div>
      <main className="z-10 mx-auto flex w-full flex-1 flex-col items-center justify-center space-y-5  ">
        {/* Title */}
        <h1 className="text-4xl text-white">Create your account</h1>
        {/* Buttons */}
        <div className="flex w-full max-w-md space-x-4 px-5 text-white/50 sm:px-0 ">
          <div className="flex w-full justify-center rounded-md bg-white/5 p-3 transition duration-500 hover:bg-white/10">
            <FaGithub className="" />
          </div>
          <div className="flex w-full justify-center rounded-md bg-white/5 p-3 transition duration-500 hover:bg-white/10">
            <FcGoogle className="" />
          </div>
        </div>
        {/* or */}
        <small className="text-lg text-white/40">or</small>
        {/* Email */}
        <form
          className="max-w w-full max-w-md space-y-5 px-5 sm:px-0"
          onSubmit={onSubmit}
        >
          <div className="">
            <input
              name="email"
              type="email"
              placeholder="Email address"
              className="gradient-input relative w-full rounded-lg border-transparent bg-white/5 py-3 px-5 text-white/80 placeholder-white/40 outline-none"
              onChange={onChange}
            />
          </div>
          <div className="relative flex items-center justify-center">
            <input
              name="password"
              type={passwordType}
              placeholder="Password"
              autoComplete="current-password"
              className="w-full rounded-md bg-white/5 py-3 px-5 text-white/80 placeholder-white/40 outline-none "
              onChange={onChange}
            />
            {passwordType === "password" ? (
              <AiFillEye
                className="absolute right-4 cursor-pointer text-2xl text-white"
                onClick={togglePassword}
              />
            ) : (
              <AiFillEyeInvisible
                className="absolute right-4 cursor-pointer text-2xl text-white"
                onClick={togglePassword}
              />
            )}
          </div>
          <div className="relative flex items-center justify-center">
            <input
              name="confirmPassword"
              type={passwordType}
              placeholder="Confirm Password"
              autoComplete="current-password"
              className="w-full rounded-md bg-white/5 py-3 px-5 text-white/80 placeholder-white/40 outline-none"
              onChange={onChange}
            />
            {passwordType === "password" ? (
              <AiFillEye
                className="absolute right-4 cursor-pointer text-2xl text-white"
                onClick={togglePassword}
              />
            ) : (
              <AiFillEyeInvisible
                className="absolute right-4 cursor-pointer text-2xl text-white"
                onClick={togglePassword}
              />
            )}
          </div>
          <p className="text-red-500">
            {formError ||
              FIREBASE_ERRORS[
                authError?.message as keyof typeof FIREBASE_ERRORS
              ]}
          </p>
          <button
            type="submit"
            className="flex w-full justify-center rounded-md bg-white/80 py-3 text-black/80 transition duration-500 hover:bg-white/100 hover:text-black/100"
          >
            <h1>Create account</h1>
          </button>
          <Link href="/login">
            <button className="before:gradient group relative flex w-full items-center justify-center space-x-1 rounded-md border-2 border-white/5 py-3 px-2 transition duration-500 before:rounded-md">
              <h1 className="text-white/40 transition duration-500 group-hover:text-white/100">
                I already have an account
              </h1>
              <FiChevronRight className="text-white/40 transition duration-500 group-hover:translate-x-2 group-hover:text-white/100" />
            </button>
          </Link>
        </form>
      </main>
    </div>
  );
}

export default Signup;
